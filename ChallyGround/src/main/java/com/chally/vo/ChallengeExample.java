package com.chally.vo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ChallengeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public ChallengeExample() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("TITLE is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("TITLE is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("TITLE =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("TITLE <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("TITLE >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("TITLE >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("TITLE <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("TITLE <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("TITLE like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("TITLE not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("TITLE in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("TITLE not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("TITLE between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("TITLE not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andMinJoinIsNull() {
            addCriterion("MIN_JOIN is null");
            return (Criteria) this;
        }

        public Criteria andMinJoinIsNotNull() {
            addCriterion("MIN_JOIN is not null");
            return (Criteria) this;
        }

        public Criteria andMinJoinEqualTo(Integer value) {
            addCriterion("MIN_JOIN =", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinNotEqualTo(Integer value) {
            addCriterion("MIN_JOIN <>", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinGreaterThan(Integer value) {
            addCriterion("MIN_JOIN >", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("MIN_JOIN >=", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinLessThan(Integer value) {
            addCriterion("MIN_JOIN <", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinLessThanOrEqualTo(Integer value) {
            addCriterion("MIN_JOIN <=", value, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinIn(List<Integer> values) {
            addCriterion("MIN_JOIN in", values, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinNotIn(List<Integer> values) {
            addCriterion("MIN_JOIN not in", values, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinBetween(Integer value1, Integer value2) {
            addCriterion("MIN_JOIN between", value1, value2, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMinJoinNotBetween(Integer value1, Integer value2) {
            addCriterion("MIN_JOIN not between", value1, value2, "minJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinIsNull() {
            addCriterion("MAX_JOIN is null");
            return (Criteria) this;
        }

        public Criteria andMaxJoinIsNotNull() {
            addCriterion("MAX_JOIN is not null");
            return (Criteria) this;
        }

        public Criteria andMaxJoinEqualTo(Integer value) {
            addCriterion("MAX_JOIN =", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinNotEqualTo(Integer value) {
            addCriterion("MAX_JOIN <>", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinGreaterThan(Integer value) {
            addCriterion("MAX_JOIN >", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinGreaterThanOrEqualTo(Integer value) {
            addCriterion("MAX_JOIN >=", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinLessThan(Integer value) {
            addCriterion("MAX_JOIN <", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinLessThanOrEqualTo(Integer value) {
            addCriterion("MAX_JOIN <=", value, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinIn(List<Integer> values) {
            addCriterion("MAX_JOIN in", values, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinNotIn(List<Integer> values) {
            addCriterion("MAX_JOIN not in", values, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinBetween(Integer value1, Integer value2) {
            addCriterion("MAX_JOIN between", value1, value2, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andMaxJoinNotBetween(Integer value1, Integer value2) {
            addCriterion("MAX_JOIN not between", value1, value2, "maxJoin");
            return (Criteria) this;
        }

        public Criteria andStartDtIsNull() {
            addCriterion("START_DT is null");
            return (Criteria) this;
        }

        public Criteria andStartDtIsNotNull() {
            addCriterion("START_DT is not null");
            return (Criteria) this;
        }

        public Criteria andStartDtEqualTo(Date value) {
            addCriterion("START_DT =", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtNotEqualTo(Date value) {
            addCriterion("START_DT <>", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtGreaterThan(Date value) {
            addCriterion("START_DT >", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtGreaterThanOrEqualTo(Date value) {
            addCriterion("START_DT >=", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtLessThan(Date value) {
            addCriterion("START_DT <", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtLessThanOrEqualTo(Date value) {
            addCriterion("START_DT <=", value, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtIn(List<Date> values) {
            addCriterion("START_DT in", values, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtNotIn(List<Date> values) {
            addCriterion("START_DT not in", values, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtBetween(Date value1, Date value2) {
            addCriterion("START_DT between", value1, value2, "startDt");
            return (Criteria) this;
        }

        public Criteria andStartDtNotBetween(Date value1, Date value2) {
            addCriterion("START_DT not between", value1, value2, "startDt");
            return (Criteria) this;
        }

        public Criteria andEndDtIsNull() {
            addCriterion("END_DT is null");
            return (Criteria) this;
        }

        public Criteria andEndDtIsNotNull() {
            addCriterion("END_DT is not null");
            return (Criteria) this;
        }

        public Criteria andEndDtEqualTo(Date value) {
            addCriterion("END_DT =", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtNotEqualTo(Date value) {
            addCriterion("END_DT <>", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtGreaterThan(Date value) {
            addCriterion("END_DT >", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtGreaterThanOrEqualTo(Date value) {
            addCriterion("END_DT >=", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtLessThan(Date value) {
            addCriterion("END_DT <", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtLessThanOrEqualTo(Date value) {
            addCriterion("END_DT <=", value, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtIn(List<Date> values) {
            addCriterion("END_DT in", values, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtNotIn(List<Date> values) {
            addCriterion("END_DT not in", values, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtBetween(Date value1, Date value2) {
            addCriterion("END_DT between", value1, value2, "endDt");
            return (Criteria) this;
        }

        public Criteria andEndDtNotBetween(Date value1, Date value2) {
            addCriterion("END_DT not between", value1, value2, "endDt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtIsNull() {
            addCriterion("DELETE_AT is null");
            return (Criteria) this;
        }

        public Criteria andDeleteAtIsNotNull() {
            addCriterion("DELETE_AT is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteAtEqualTo(String value) {
            addCriterion("DELETE_AT =", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtNotEqualTo(String value) {
            addCriterion("DELETE_AT <>", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtGreaterThan(String value) {
            addCriterion("DELETE_AT >", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtGreaterThanOrEqualTo(String value) {
            addCriterion("DELETE_AT >=", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtLessThan(String value) {
            addCriterion("DELETE_AT <", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtLessThanOrEqualTo(String value) {
            addCriterion("DELETE_AT <=", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtLike(String value) {
            addCriterion("DELETE_AT like", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtNotLike(String value) {
            addCriterion("DELETE_AT not like", value, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtIn(List<String> values) {
            addCriterion("DELETE_AT in", values, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtNotIn(List<String> values) {
            addCriterion("DELETE_AT not in", values, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtBetween(String value1, String value2) {
            addCriterion("DELETE_AT between", value1, value2, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andDeleteAtNotBetween(String value1, String value2) {
            addCriterion("DELETE_AT not between", value1, value2, "deleteAt");
            return (Criteria) this;
        }

        public Criteria andRegistDtIsNull() {
            addCriterion("REGIST_DT is null");
            return (Criteria) this;
        }

        public Criteria andRegistDtIsNotNull() {
            addCriterion("REGIST_DT is not null");
            return (Criteria) this;
        }

        public Criteria andRegistDtEqualTo(Date value) {
            addCriterion("REGIST_DT =", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtNotEqualTo(Date value) {
            addCriterion("REGIST_DT <>", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtGreaterThan(Date value) {
            addCriterion("REGIST_DT >", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtGreaterThanOrEqualTo(Date value) {
            addCriterion("REGIST_DT >=", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtLessThan(Date value) {
            addCriterion("REGIST_DT <", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtLessThanOrEqualTo(Date value) {
            addCriterion("REGIST_DT <=", value, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtIn(List<Date> values) {
            addCriterion("REGIST_DT in", values, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtNotIn(List<Date> values) {
            addCriterion("REGIST_DT not in", values, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtBetween(Date value1, Date value2) {
            addCriterion("REGIST_DT between", value1, value2, "registDt");
            return (Criteria) this;
        }

        public Criteria andRegistDtNotBetween(Date value1, Date value2) {
            addCriterion("REGIST_DT not between", value1, value2, "registDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtIsNull() {
            addCriterion("UPDT_DT is null");
            return (Criteria) this;
        }

        public Criteria andUpdtDtIsNotNull() {
            addCriterion("UPDT_DT is not null");
            return (Criteria) this;
        }

        public Criteria andUpdtDtEqualTo(Date value) {
            addCriterion("UPDT_DT =", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtNotEqualTo(Date value) {
            addCriterion("UPDT_DT <>", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtGreaterThan(Date value) {
            addCriterion("UPDT_DT >", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtGreaterThanOrEqualTo(Date value) {
            addCriterion("UPDT_DT >=", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtLessThan(Date value) {
            addCriterion("UPDT_DT <", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtLessThanOrEqualTo(Date value) {
            addCriterion("UPDT_DT <=", value, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtIn(List<Date> values) {
            addCriterion("UPDT_DT in", values, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtNotIn(List<Date> values) {
            addCriterion("UPDT_DT not in", values, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtBetween(Date value1, Date value2) {
            addCriterion("UPDT_DT between", value1, value2, "updtDt");
            return (Criteria) this;
        }

        public Criteria andUpdtDtNotBetween(Date value1, Date value2) {
            addCriterion("UPDT_DT not between", value1, value2, "updtDt");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table challenge
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 29 23:36:37 KST 2024
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table challenge
     *
     * @mbg.generated Mon Jul 29 23:36:37 KST 2024
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}